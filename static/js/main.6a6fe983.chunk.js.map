{"version":3,"sources":["style/images/backCardImg.png","style/images/heart.png","style/images/diamond.png","style/images/club.png","style/images/spade.png","components/Card.jsx","components/ActionsButtons.jsx","utils/DeckArray.js","App.js","serviceWorker.js","index.js"],"names":["Card","props","suits","card","front","color","cardSymbol","symbol","diamond","heart","club","spade","getCardSymbol","className","style","position","top","left","maxWidth","src","alt","height","transform","backgroundImage","backCardImg","ActionsButtons","margin","textAlign","onClick","shuffle","deckArray","dealOneCard","index","App","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","setState","cardsArray","cardPicked","state","randomItem","newCardsArray","filter","element","cardsPickedArray","push","this","width","display","justifyContent","map","flip","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8LAAe,MAA0B,wCCA1B,MAA0B,kCCA1B,MAA0B,oCCA1B,MAA0B,iCCA1B,MAA0B,kC,OC6D1BA,EAnDF,SAACC,GAEZ,IAAQC,EAA8BD,EAA9BC,MAAOC,EAAuBF,EAAvBE,KAAMC,EAAiBH,EAAjBG,MAAOC,EAAUJ,EAAVI,MAkB5B,IAAa,IAAVD,EAAgB,CACjB,IAAME,EAjBc,SAACJ,GACrB,IAAIK,EACJ,OAAOL,GACL,IAAK,UACH,OAAgBM,EAClB,IAAK,QACH,OAAgBC,EAClB,IAAK,OACH,OAAgBC,EAClB,IAAK,QACH,OAAgBC,EAClB,QACE,OAAOJ,GAKQK,CAAcV,GACjC,OACE,sBAAKW,UAAU,iBAAiBC,MAAO,CAAET,MAAM,GAAD,OAAKA,IAAnD,UACE,sBAAMS,MAAO,CAAEC,SAAU,WAAYC,IAAK,EAAGC,KAAM,GAAnD,UACE,qBAAKH,MAAO,CAAEI,SAAU,IAAxB,SAA+Bf,IAC/B,qBAAKgB,IAAKb,EAAYc,IAAI,cAAcN,MAAO,CAAEI,SAAU,SAE7D,8BACE,qBAAKC,IAAKb,EAAYc,IAAI,cAAcN,MAAO,CAAEO,OAAQ,GAAIN,SAAU,WAAYC,IAAK,MAAOC,KAAM,MAAOK,UAAW,6BAEzH,gCACE,qBAAKR,MAAO,CAAEI,SAAU,IAAxB,SAA+Bf,IAC/B,qBAAKgB,IAAKb,EAAYc,IAAI,cAAcN,MAAO,CAAEI,SAAU,YAKjE,OACE,qBAAKL,UAAU,iBAAiBC,MAAO,CAAES,gBAAgB,OAAD,OAASC,EAAT,KAAyBnB,MAAM,GAAD,OAAKA,OC7BlFoB,G,MAjBQ,SAACxB,GACtB,OACE,sBAAKa,MAAO,CAAEY,OAAQ,YAAaC,UAAW,UAA9C,UACE,wBAAQC,QAAS,kBAAM3B,EAAM4B,QAAQ5B,EAAM6B,YAA3C,qBACA,wBAAQF,QAAS,kBAAM3B,EAAM8B,eAA7B,+BCPOD,EAAY,CACvB,CACE5B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,KAET,CACE9B,MAAO,QACPC,KAAM,KACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,KACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,UACPC,KAAM,IACNE,MAAO,MACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,KACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,OACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,KACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,MAET,CACE9B,MAAO,QACPC,KAAM,IACNE,MAAO,QACP2B,MAAO,OC5OIC,E,kDAnEb,aAAe,IAAD,8BACZ,gBAQFJ,QAAU,SAACK,GAGT,IADA,IAAiCC,EAAgBC,EAA7CC,EAAeH,EAAMI,OAClB,IAAMD,GACXD,EAAcG,KAAKC,MAAMD,KAAKE,SAAWJ,GAEzCF,EAAiBD,EADjBG,GAAgB,GAEhBH,EAAMG,GAAgBH,EAAME,GAC5BF,EAAME,GAAeD,EAGvB,OADA,EAAKO,SAAS,CAAEC,WAAYT,EAAOU,WAAY,KACxCV,GApBK,EAuBdH,YAAc,WACZ,IAAIY,EAAa,EAAKE,MAAMF,WACtBG,EAAaH,EAAWJ,KAAKC,MAAMD,KAAKE,SAASE,EAAWL,SAC5DS,EAAgBJ,EAAWK,QAAO,SAAAC,GAAO,OAAIA,EAAQjB,QAAUc,EAAWd,SAChF,EAAKU,SAAS,CAAEC,WAAYI,IAC5B,IAAIG,EAAmB,EAAKL,MAAMD,WAClCM,EAAiBZ,OAAS,IAC1BY,EAAiBC,KAAKL,GACtB,EAAKJ,SAAS,CAAEE,WAAYM,KA7B5B,EAAKL,MAAQ,CACXF,WAAYb,EACZc,WAAY,GACZxC,OAAO,GALG,E,0CAoCd,WAAU,IAAD,OACDuC,EAAaS,KAAKP,MAAMF,WACxBO,EAAmBE,KAAKP,MAAMD,WAEpC,OACE,sBAAK9B,MAAO,CAAEuC,MAAO,QAArB,UACE,qBAAMvC,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,SAAU7B,OAAQ,sBAAuBL,OAAQ,KAAjG,SACGsB,GAAcA,EAAWa,KAAI,SAACrD,EAAM6B,GACnC,OACE,qBAAKnB,UAAU,uBAAf,SACE,cAAC,EAAD,CAAMX,MAAOC,EAAKD,MAAOC,KAAMA,EAAKA,KAAME,MAAOF,EAAKE,MAAOD,MAAO,EAAKyC,MAAMzC,SADtC4B,QAMjD,cAAC,EAAD,CAAgBH,QAASuB,KAAKvB,QAASE,YAAaqB,KAAKrB,YAAa0B,KAAML,KAAKK,KAAM3B,UAAWA,IAClG,qBAAKhB,MAAO,CAAEwC,QAAS,OAAQC,eAAgB,SAAU7B,OAAQ,uBAAjE,SACGwB,GAAoBA,EAAiBM,KAAI,SAACrD,EAAM6B,GAC/C,OACE,qBAAKnB,UAAU,qBAAf,SACE,cAAC,EAAD,CAAMX,MAAOC,EAAKD,MAAOC,KAAMA,EAAKA,KAAME,MAAOF,EAAKE,MAAOD,OAAO,KAD7B4B,e,GAzDrC0B,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6a6fe983.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/backCardImg.a88b854c.png\";","export default __webpack_public_path__ + \"static/media/heart.20165ed9.png\";","export default __webpack_public_path__ + \"static/media/diamond.24d3b3e2.png\";","export default __webpack_public_path__ + \"static/media/club.685245d3.png\";","export default __webpack_public_path__ + \"static/media/spade.7b0c2f88.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport backCardImg from \"../style/images/backCardImg.png\";\nimport heart from \"../style/images/heart.png\";\nimport diamond from \"../style/images/diamond.png\";\nimport club from \"../style/images/club.png\";\nimport spade from \"../style/images/spade.png\";\n\n\nconst Card = (props) => {\n\n  const { suits, card, front, color } = props;\n\n  const getCardSymbol = (suits) => {\n    let symbol;\n    switch(suits) {\n      case \"Diamond\":\n        return symbol = diamond;\n      case \"Heart\":\n        return symbol = heart;\n      case \"Club\":\n        return symbol = club;\n      case \"Spade\":\n        return symbol = spade;\n      default:\n        return symbol;\n    };\n  };\n\n  if(front === true) {\n    const cardSymbol = getCardSymbol(suits);\n    return (\n      <div className=\"card-container\" style={{ color: `${color}` }}>\n        <div  style={{ position: \"absolute\", top: 5, left: 5 }}>\n          <div style={{ maxWidth: 20 }}>{card}</div>\n          <img src={cardSymbol} alt=\"suit-symbol\" style={{ maxWidth: 20 }}/>\n        </div>\n        <div>\n          <img src={cardSymbol} alt=\"suit-symbol\" style={{ height: 40, position: \"absolute\", top: \"50%\", left: \"50%\", transform: \"translate(-50%, -50%)\" }}/>\n        </div>\n        <div >\n          <div style={{ maxWidth: 20 }}>{card}</div>\n          <img src={cardSymbol} alt=\"suit-symbol\" style={{ maxWidth: 20 }}/>        \n        </div>\n      </div> \n    );\n  } else {\n    return (\n      <div className=\"card-container\" style={{ backgroundImage: `url(${backCardImg})`, color: `${color}` }}></div>\n    );\n  };\n};\n\nCard.propTypes = {\n  suits: PropTypes.string,\n  card: PropTypes.string,\n  front: PropTypes.bool,\n  color: PropTypes.string\n};\n\nexport default Card;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport '../style/index.css'\nconst ActionsButtons = (props) => {\n  return (\n    <div style={{ margin: \"40px auto\", textAlign: \"center\" }}>\n      <button onClick={() => props.shuffle(props.deckArray)}>Shuffle</button>\n      <button onClick={() => props.dealOneCard()}>pick 5 cards</button>\n\n    </div>\n  );\n};\n\nActionsButtons.propTypes = {\n  shuffle: PropTypes.func,\n  dealOneCard: PropTypes.func,\n  flip: PropTypes.func,\n  deckArray: PropTypes.array\n};\n\nexport default ActionsButtons;\n","export const deckArray = [\n  {\n    suits: \"Heart\",\n    card: \"A\",\n    color: \"red\",\n    index: \"1\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"2\",\n    color: \"red\",\n    index: \"2\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"3\",\n    color: \"red\",\n    index: \"3\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"4\",\n    color: \"red\",\n    index: \"4\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"5\",\n    color: \"red\",\n    index: \"5\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"6\",\n    color: \"red\",\n    index: \"6\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"7\",\n    color: \"red\",\n    index: \"7\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"8\",\n    color: \"red\",\n    index: \"8\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"9\",\n    color: \"red\",\n    index: \"9\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"10\",\n    color: \"red\",\n    index: \"10\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"J\",\n    color: \"red\",\n    index: \"11\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"Q\",\n    color: \"red\",\n    index: \"12\"\n  },\n  {\n    suits: \"Heart\",\n    card: \"K\",\n    color: \"red\",\n    index: \"13\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"A\",\n    color: \"red\",\n    index: \"14\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"2\",\n    color: \"red\",\n    index: \"15\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"3\",\n    color: \"red\",\n    index: \"16\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"4\",\n    color: \"red\",\n    index: \"17\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"5\",\n    color: \"red\",\n    index: \"18\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"6\",\n    color: \"red\",\n    index: \"19\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"7\",\n    color: \"red\",\n    index: \"20\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"8\",\n    color: \"red\",\n    index: \"21\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"9\",\n    color: \"red\",\n    index: \"22\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"10\",\n    color: \"red\",\n    index: \"23\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"J\",\n    color: \"red\",\n    index: \"24\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"Q\",\n    color: \"red\",\n    index: \"25\"\n  },\n  {\n    suits: \"Diamond\",\n    card: \"K\",\n    color: \"red\",\n    index: \"26\"\n  },\n  {\n    suits: \"Club\",\n    card: \"A\",\n    color: \"black\",\n    index: \"27\"\n  },\n  {\n    suits: \"Club\",\n    card: \"2\",\n    color: \"black\",\n    index: \"28\"\n  },\n  {\n    suits: \"Club\",\n    card: \"3\",\n    color: \"black\",\n    index: \"29\"\n  },\n  {\n    suits: \"Club\",\n    card: \"4\",\n    color: \"black\",\n    index: \"30\"\n  },\n  {\n    suits: \"Club\",\n    card: \"5\",\n    color: \"black\",\n    index: \"31\"\n  },\n  {\n    suits: \"Club\",\n    card: \"6\",\n    color: \"black\",\n    index: \"32\"\n  },\n  {\n    suits: \"Club\",\n    card: \"7\",\n    color: \"black\",\n    index: \"33\"\n  },\n  {\n    suits: \"Club\",\n    card: \"8\",\n    color: \"black\",\n    index: \"34\"\n  },\n  {\n    suits: \"Club\",\n    card: \"9\",\n    color: \"black\",\n    index: \"35\"\n  },\n  {\n    suits: \"Club\",\n    card: \"10\",\n    color: \"black\",\n    index: \"36\"\n  },\n  {\n    suits: \"Club\",\n    card: \"J\",\n    color: \"black\",\n    index: \"37\"\n  },\n  {\n    suits: \"Club\",\n    card: \"Q\",\n    color: \"black\",\n    index: \"38\"\n  },\n  {\n    suits: \"Club\",\n    card: \"K\",\n    color: \"black\",\n    index: \"39\"\n  }, \n  {\n    suits: \"Spade\",\n    card: \"A\",\n    color: \"black\",\n    index: \"40\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"2\",\n    color: \"black\",\n    index: \"41\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"3\",\n    color: \"black\",\n    index: \"42\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"4\",\n    color: \"black\",\n    index: \"43\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"5\",\n    color: \"black\",\n    index: \"44\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"6\",\n    color: \"black\",\n    index: \"45\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"7\",\n    color: \"black\",\n    index: \"46\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"8\",\n    color: \"black\",\n    index: \"47\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"9\",\n    color: \"black\",\n    index: \"48\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"10\",\n    color: \"black\",\n    index: \"49\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"J\",\n    color: \"black\",\n    index: \"50\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"Q\",\n    color: \"black\",\n    index: \"51\"\n  },\n  {\n    suits: \"Spade\",\n    card: \"K\",\n    color: \"black\",\n    index: \"52\"\n  }\n];","import React, { Component } from \"react\";\n\nimport Card from \"./components/Card\" ;\nimport ActionsButtons from \"./components/ActionsButtons\" ;\nimport { deckArray } from \"./utils/DeckArray\";\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      cardsArray: deckArray,\n      cardPicked: [],\n      front: true\n    };\n  };\n\n  shuffle = (array) => {\n   \n    let currentIndex = array.length, temporaryValue, randomIndex;\n    while (0 !== currentIndex) {\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    };\n    this.setState({ cardsArray: array, cardPicked: [] })\n    return array;\n  };\n\n  dealOneCard = () => {\n    let cardsArray = this.state.cardsArray;\n    const randomItem = cardsArray[Math.floor(Math.random()*cardsArray.length)];\n    const newCardsArray = cardsArray.filter(element => element.index !== randomItem.index)\n    this.setState({ cardsArray: newCardsArray })\n    let cardsPickedArray = this.state.cardPicked;\n    cardsPickedArray.length < 52 &&\n    cardsPickedArray.push(randomItem);\n    this.setState({ cardPicked: cardsPickedArray })\n  };\n\n\n\n  render() {\n    const cardsArray = this.state.cardsArray;\n    const cardsPickedArray = this.state.cardPicked;\n\n    return (\n      <div style={{ width: \"100%\" }}>\n        <div  style={{ display: \"flex\", justifyContent: \"center\", margin: \"40px auto 0px 180px\", height: 282 }}>\n          {cardsArray && cardsArray.map((card, index) => {\n            return (\n              <div className=\"animated slideInDown\" key={index}>\n                <Card suits={card.suits} card={card.card} color={card.color} front={this.state.front}/>\n              </div>\n            ); \n          })}\n        </div>\n        <ActionsButtons shuffle={this.shuffle} dealOneCard={this.dealOneCard} flip={this.flip} deckArray={deckArray} />\n        <div style={{ display: \"flex\", justifyContent: \"center\", margin: \"40px auto 0px 180px\" }}>\n          {cardsPickedArray && cardsPickedArray.map((card, index) => {\n            return (\n              <div className=\"animated slideInUp\" key={index}>\n                <Card suits={card.suits} card={card.card} color={card.color} front={true}/>\n              </div>\n            ); \n          })}\n        </div>\n      </div>\n    );\n  };\n};\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}